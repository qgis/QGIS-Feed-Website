# portal
server {
	listen 80;
	listen [::]:80;
  	server_name feed.qgis.org;

  	# Block *.php
  	location ~\.php$ {
      		return 404;
  	}

  	location /static/ {
      		root /shared-volume/;
  	}

  	location /media/ {
      		root /shared-volume/;
  	}

  	location / {
      		rewrite ^ https://$host$request_uri? permanent;
  	}

  	location ~ /.well-known/acme-challenge {
        	# set to webroot path
        	root /var/www/webroot;
  		    default_type "text/plain";
  		    allow all;
  	}
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name feed.qgis.org;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/feed.qgis.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/feed.qgis.org/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
                try_files $uri @qgisfeed;
        }

        location /static/ {
                root /shared-volume/;
        }

        location /media/ {
                root /shared-volume/;
        }

        location @qgisfeed {
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;

                proxy_pass http://web;

                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'; img-src * data: blob:;" always;
                # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                # enable strict transport security only if you understand the implications
        }


        location /metabase/ {
            proxy_pass http://metabase:3000/;

            #Defines the HTTP protocol version for proxying
            #by default it it set to 1.0.
            #For Websockets and keepalive connections you need to use the version 1.1
            proxy_http_version  1.1;

            #Sets conditions under which the response will not be taken from a cache.
            proxy_cache_bypass  $http_upgrade;

            #These header fields are required if your application is using Websockets
            proxy_set_header Upgrade $http_upgrade;

            #These header fields are required if your application is using Websockets
            proxy_set_header Connection "upgrade";

            #The $host variable in the following order of precedence contains:
            #hostname from the request line, or hostname from the Host request header field
            #or the server name matching a request.
            proxy_set_header Host $host;

            #Forwards the real visitor remote IP address to the proxied server
            proxy_set_header X-Real-IP $remote_addr;

            #A list containing the IP addresses of every server the client has been proxied through
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            #When used inside an HTTPS server block, each HTTP response from the proxied server is rewritten to HTTPS.
            proxy_set_header X-Forwarded-Proto $scheme;

            #Defines the original host requested by the client.
            proxy_set_header X-Forwarded-Host $host;

            #Defines the original port requested by the client.
            proxy_set_header X-Forwarded-Port $server_port;
        }

        root /var/www/webroot;
}
